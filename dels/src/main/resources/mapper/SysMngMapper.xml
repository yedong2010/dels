<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dels.dao.SysMngMapper">

    <resultMap id="User" type="com.dels.model.sys.User"></resultMap>
    <resultMap id="Role" type="com.dels.model.sys.Role"></resultMap>
    <parameterMap id="pUser" type="com.dels.model.sys.User"></parameterMap>
    <parameterMap id="pRole" type="com.dels.model.sys.Role"></parameterMap>

    <!--查询所有用户信息-->
    <select id="getUserList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            a.id,a.uname,a.email,a.descr,a.passwd,a.department,a.type,a.status,
            a.phone_number as "phoneNumer",
            r.rol_name,r.id as roleid
        FROM dms_user a
        left join dms_user_rol b on a.id=b.user_id
        left join dms_role r on b.role_id=r.id
        order by a.cdate desc
    </select>

    <!--查询所有角色信息-->
    <select id="getRoleList" resultType="java.util.Map">
        SELECT
            id,rol_name
        FROM dms_role
        order by ctime desc
    </select>

    <select id="findRoleList" resultType="java.util.Map">
        SELECT
           id,rol_name
        FROM dms_role
        WHERE id not in ('1', '3', '4')
        order by ctime desc
    </select>

    <select id="getMenuList" resultType="java.util.Map">
        SELECT
            m.id,
            m.name,
            m.parent_id,
            m.status
        FROM dms_menu m
        ORDER BY m.menu_order ASC
    </select>

    <select id="getParentMenuList" parameterType="String" resultType="java.util.Map">
            SELECT
                  m.url,m.name,us.type
            FROM dms_menu m
            left JOIN dms_rol_menu rm ON m.id=rm.menu_id
            LEFT JOIN dms_role r ON rm.role_id=r.id
            LEFT JOIN dms_user_rol ur ON r.id=ur.role_id
            LEFT JOIN dms_user us ON ur.user_id=us.id
            where us.uname=#{userName}
                and m.id is not null
                and m.type='parent'
            ORDER BY m.menu_order ASC
    </select>

    <select id="getUserMenuList" parameterType="java.util.Map" resultType="java.util.Map">
            SELECT
                m.id,m.name,m.url,m.img,m.type
            FROM dms_menu m
            left JOIN dms_rol_menu rm ON m.id=rm.menu_id
            LEFT JOIN dms_role r ON rm.role_id=r.id
            LEFT JOIN dms_user_rol ur ON r.id=ur.role_id
            LEFT JOIN dms_user us ON ur.user_id=us.id
            where us.uname=#{name}
                and m.parent_id=(SELECT id from dms_menu where url=#{url})
            ORDER BY m.menu_order ASC
    </select>

    <select id="selectUserStatusById" resultType="String">
        select status from dms_user
        where id=#{userid}
    </select>

    <update id="updateUserStatus">
        update dms_user set status=#{status}
        <if test="status == 0">
            ,errornum=0
        </if>
        where id=#{userid}
    </update>

    <update id="changeUserErrorNum">
        UPDATE dms_user set errornum=0
        WHERE uname = #{userName}
    </update>

    <update id="updateUserErrorNum">
        UPDATE dms_user set errornum=errornum+1
        WHERE uname=#{userName}
    </update>

    <update id="updateUserStatusTo1">
        update dms_user set status=1
        where uname=#{userName}
          and errornum &gt;= (select num from dms_msg_mng)
    </update>

    <select id="selectUserStatusByName" resultType="String">
        SELECT status FROM dms_user
        WHERE uname=#{userName}
    </select>

    <select id="selectPhoneByRoleId" resultType="String">
        select a.phone_number
        from dms_user a
        left join dms_user_rol b on a.id = b.user_id
        where role_id=#{roleid}
    </select>

    <insert id="addRole" parameterMap="pRole">
        INSERT into dms_role(id,rol_name)
        values(#{id},#{rol_name})
    </insert>

    <insert id="addRolMenu" parameterMap="pRole">
        INSERT INTO dms_rol_menu(role_id,menu_id)
        VALUES(#{role_id},#{menu_id})
    </insert>

    <delete id="updateMenuDel">
        delete from dms_rol_menu where role_id = #{roleid}
        and menu_id not in
        <foreach collection="list" index="index" item="item" open="(" close=")" separator="," >
            #{item}
        </foreach>
    </delete>

    <select id="selectRoleCount" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM dms_role
        WHERE id != #{roleid}  and rol_name=#{roleName}
    </select>

    <select id="selectMenuidForRole" resultType="String">
        select id from dms_menu where id in
        <foreach collection="list" index="index" item="item" open="(" close=")" separator="," >
            #{item}
        </foreach>
        and id not in(select menu_id from dms_rol_menu where role_id=#{roleid})
    </select>

    <insert id="addUser" parameterMap="pUser">
        INSERT INTO dms_user(id,uname,passwd,email,descr,status,type,phone_number)
        VALUES(#{id},#{uname},#{passwd},#{email},#{descr},0,#{type},#{phoneNumer})
    </insert>

    <insert id="addUserRole" parameterMap="pUser">
        INSERT INTO dms_user_rol(user_id,role_id)
        VALUES(#{user_id},#{role_id})
    </insert>
    
    <delete id="deleteUser" parameterType="String">
        DELETE FROM dms_user  WHERE id=#{userId}
    </delete>

    <delete id="delRoleById" parameterType="String">
        DELETE FROM dms_role where id=#{roleId}
    </delete>

    <update id="updateUserInfo" parameterMap="pUser">
        update dms_user
            set uname=#{uname},
            email=#{email},
            <if test="null != phoneNumer and ''!=phoneNumer ">
                phone_number=#{phoneNumer},
            </if>
            descr=#{descr},
            type=#{type}
        where id=#{id}
    </update>

    <update id="updateUserDepartMent">
        UPDATE dms_user
           set department=#{department}, type=#{type}
        WHERE id=#{userid}
    </update>

    <select id="countUserRole" parameterType="String" resultType="java.lang.Integer">
        select count(1) from dms_user_rol a
        where a.user_id=#{userId}
    </select>

    <update id="updateUserRole" parameterMap="pUser">
        update dms_user_rol
        set role_id=#{role_id}
        where user_id=#{user_id}
    </update>

    <delete id="deleteUserRole" parameterType="String">
        DELETE FROM dms_user_rol
        WHERE user_id=#{userId}
    </delete>

    <update id="updateRoleInfo" parameterMap="pRole">
        UPDATE dms_role
        set rol_name=#{rol_name}
        where id=#{id}
    </update>

    <delete id="delRolMenu" parameterType="String">
        DELETE FROM dms_rol_menu
        WHERE role_id=#{roleId}
    </delete>

    <select id="getRoleMenList" parameterType="String" resultType="String">
        SELECT menu_id FROM dms_rol_menu
        WHERE role_id=#{roleId}
    </select>

    <select id="checkUserName" parameterMap="pUser" resultType="Integer">
        SELECT COUNT(1) FROM dms_user
        WHERE uname=#{uname}
    </select>

    <select id="checkRoleName" parameterMap="pRole" resultType="Integer">
        SELECT COUNT(1) FROM dms_role d
        WHERE d.rol_name=#{rol_name}
    </select>

    <select id="checkRoleDel" parameterType="String" resultType="String">
        SELECT can_del FROM dms_role
        WHERE id=#{roleId}
    </select>

    <select id="getUserNumByRoleId" parameterType="String" resultType="java.lang.Integer">
        select count(1) as num from dms_user_rol
        where role_id = #{roleId}
    </select>

    <select id="getUserInfo" parameterMap="pUser" resultType="java.util.Map">
        SELECT
                d.id,d.uname,d.passwd,d.type,d.department,d.email,d.status,d.descr,
                r.id as roleid, r.rol_name as "rolName"
        FROM dms_user d
        left join dms_user_rol ur on d.id=ur.user_id
        left join dms_role r on ur.role_id=r.id
        WHERE 1=1
        <if test="null != uname and uname != ''">
            and d.uname=#{uname}
        </if>
        <if test="null != id and id != ''">
            and d.id = #{id}
        </if>
    </select>

    <update id="updatePasswd" parameterMap="pUser">
        UPDATE dms_user  set passwd=#{passwd}
        WHERE id=#{id}
    </update>

    <!--安全审计、消息提醒 -start- l13595 2017/2/13 17:20 -->
    <insert id="addSaftyMsg" parameterType="java.util.Map">
        INSERT into dms_msg(id,ip) VALUES(#{id},#{ip})
    </insert>

    <select id="getMsgId" parameterType="String" resultType="String">
        select id from dms_msg where state='0' and ip=#{ip}
    </select>

    <update id="updateMsgNum" parameterType="String">
        update dms_msg set num=num+1 , time=current_timestamp(0)  where state='0' and ip=#{ip}
    </update>

    <update id="updateMsgState" parameterType="String">
        update dms_msg set state='1' , time=current_timestamp(0)  where state='0' and ip=#{ip}
    </update>

    <select id="getMsgList" parameterType="java.util.Map" resultType="Map">
        select id,ip,num,to_char(time, 'YYYY-MM-DD HH24:MI:SS') as optime,state from dms_msg
        where 1=1
        <if test="ip!=null and ip!=''">
            and ip like '%'||#{ip}||'%'
        </if>
        <if test="startNum!=0">
            and num &gt;=#{startNum}
        </if>
        <if test="endNum!=0">
            and num &lt;=#{endNum}
        </if>
        <if test="startTime!=null and startTime!=''">
            and time &gt;= to_timestamp(#{startTime},'yyyy-mm-dd')
        </if>
        <if test="endTime!=null and endTime!=''">
            and time &lt;= to_timestamp(#{endTime}, 'yyyy-mm-dd')
        </if>
        order by time DESC
    </select>

    <select id="getMsgMngNum" resultType="java.lang.Integer">
        select num from dms_msg_mng
    </select>

    <update id="updateMsgMngNum" parameterType="java.lang.Integer">
        update dms_msg_mng set num=#{num}
    </update>

    <update id="updateMsgMng" parameterType="java.util.Map">
        UPDATE dms_msg_mng
        SET num = #{num},
             role_id = #{roleId},
             role_name = ( SELECT rol_name	FROM dms_role	WHERE ID =#{roleId})
     </update>

    <select id="getMsgMngList" resultType="java.util.Map">
        SELECT
            id,time,ip,num
        FROM dms_msg
        WHERE num > (SELECT num FROM dms_msg_mng)
    </select>

    <select id="getMsgCount" resultType="java.lang.Integer">
        select count(1) as "count" from dms_msg
        where to_char(time,'yyyy-mm-dd')=to_char(CURRENT_DATE, 'yyyy-mm-dd')
            and num >= ( select num from dms_msg_mng)
    </select>

    <select id="getMsgForManager" resultType="java.util.Map">
         SELECT
            id,	state,	time,	ip,	num
        FROM	dms_msg
        WHERE
            to_char(time, 'yyyy-mm-dd') = to_char(CURRENT_DATE, 'yyyy-mm-dd')
        AND num >= (SELECT num FROM dms_msg_mng)
    </select>

    <select id="getSecurityTime" resultType="java.util.Map">
        select id,num,role_id,role_name from dms_msg_mng
    </select>
    <!-- end -->

    <select id="checkFileName" parameterType="String" resultType="String">
        select id from dms_file_info
        where file_name=#{fileName}
    </select>

    <select id="findFileNameById" parameterType="String" resultType="String">
        SELECT file_name from dms_file_info
        where id=#{id}
    </select>


    <insert id="insertFileInfo" parameterType="java.util.Map">
        insert into dms_file_info(id,address,file_name,uname,file_type_id,file_type)
        values(#{file.id},#{file.address},#{file.fileName},#{file.userName},#{file.typeId},(select file_type from dms_file_type where id=#{file.typeId}))
    </insert>

    <select id="getFileInfoList" parameterType="java.util.Map" resultType="java.util.Map">
        select id,address,file_name,uname,file_type_id,file_type,to_char(create_time, 'yyyy-mm-dd HH24:MI:SS') as create_time
        from dms_file_info
        where 1=1
        <if test="file.id!=null and file.id!=''">
            and id=#{file.id}
        </if>
        <if test="file.fileName!=null and file.fileName!=''">
            and file_name like '%'||#{file.fileName}||'%'
        </if>
        <if test="file.typeId!=null and file.typeId!=''">
            and file_type_id=#{file.typeId}
        </if>
        <if test="file.fileType!=null and file.fileType!=''">
            and  file_type=#{file.fileType}
        </if>
        order by create_time desc
    </select>

    <delete id="delFileInfo" parameterType="java.util.Map">
        delete from dms_file_info where id=#{file.id}
    </delete>

    <insert id="insertFileType" parameterType="java.util.Map">
        INSERT INTO dms_file_type(id,file_type,uname)
        VALUES(#{file.id},#{file.fileType},#{file.userName})
    </insert>

    <update id="updateFileType" parameterType="com.dels.model.sys.FileInfo">
        UPDATE dms_file_type set file_type=#{fileType}
        where id = #{typeId}
    </update>

    <select id="countTNameById" parameterType="com.dels.model.sys.FileInfo" resultType="java.lang.Integer">
        SELECT count(1) FROM dms_file_type
        where id != #{typeId}  and file_type = #{fileType}
    </select>

    <update id="updateFileByType" parameterType="com.dels.model.sys.FileInfo">
        UPDATE dms_file_info set file_type=#{fileType}
        WHERE file_type_id=#{typeId}
    </update>

    <select id="getFileTypeList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            id,
            file_type,
            uname,
            to_char(create_time, 'yyyy-mm-dd') as create_time
        FROM
            dms_file_type
        WHERE 1=1
        <if test="null!=file.id and file.id!=''">
            and id=#{file.id}
        </if>
        <if test="null!=file.fileType and file.fileType!=''">
            and file_type = #{file.fileType}
        </if>
    </select>

    <select id="findTypeNameById" resultType="String">
        SELECT file_type FROM dms_file_type
        WHERE id = #{id}
    </select>

    <delete id="delFileTYpe" parameterType="java.util.Map">
        DELETE FROM dms_file_type where id=#{file.id}
    </delete>

    <select id="countFileWtihType" parameterType="String" resultType="java.lang.Integer">
        select count(1) as num from dms_file_info where file_type_id=#{typeId}
    </select>

    <select id="getPasswdByUser" parameterType="com.dels.model.sys.User" resultType="String">
        select passwd from dms_user
        where 1=1
        <if test="uname!=null and uname!=''">
            and uname=#{uname}
        </if>
        <if test="id!=null and id!=''">
            and id=#{id}
        </if>
    </select>

    <select id="getRoleIdByUserName" parameterType="String" resultType="String">
        select role_id from dms_user_rol
        where user_id = (select id from dms_user a where uname=#{userName})
    </select>

    <select id="getUserPermissions" parameterType="String" resultType="java.util.Map">
        select permission,url from dms_menu m
        left  join dms_rol_menu rm on m.id=rm.menu_id
        left join dms_user_rol ur on ur.role_id=rm.role_id
        where ur.user_id=(select id from dms_user where uname=#{userName})
        order by m.menu_order
    </select>


    <!-- excel模板管理 -->
    <select id="findExcelTmpList" parameterType="com.dels.model.sys.ExcelTmplate" resultType="java.util.Map">
        select
            a.id, a.name, content, groupid, b.name as groupname, a.cuser,
            to_char(a.ctime, 'yyyy-mm-dd') as createtime
        from dms_excel_tmplate a
        left join dms_excel_group b on a.groupid=b.id
        order by a.id desc
    </select>

    <select id="findExcelNumByGroupid" resultType="java.lang.Integer">
        SELECT count(1) FROM dms_excel_tmplate
        WHERE groupid = #{groupId}
    </select>

    <select id="checkExcelTmp" resultType="java.lang.Integer">
        SELECT count(1) from dms_excel_tmplate
        where  name = #{name}
    </select>

    <insert id="insertExcelTmp" parameterType="com.dels.model.sys.ExcelTmplate">
        INSERT INTO dms_excel_tmplate(id, name, content, groupid, cuser, ctime)
        values(#{id}, #{name}, #{content}, #{groupId}, #{cuser}, CURRENT_TIMESTAMP(0))
    </insert>

    <update id="updateExcelTmp" parameterType="com.dels.model.sys.ExcelTmplate">
        UPDATE dms_excel_tmplate SET
            content = #{content}, groupid = #{groupId}
        WHERE id = #{id}
    </update>

    <update id="updateUploadExcelInfo">
        UPDATE dms_excel_tmplate SET
          cuser = #{userName}, ctime = CURRENT_TIMESTAMP(0)
        where id=#{id}
    </update>

    <select id="findExcelNameById" resultType="String">
        SELECT name FROM dms_excel_tmplate
        WHERE id=#{id}
    </select>
    <delete id="deleteExcelTmp">
        DELETE FROM dms_excel_tmplate WHERE id = #{id}
    </delete>

    <!-- excel 模板分组管理 -->
    <select id="findExcelGroupList" parameterType="com.dels.model.sys.ExcelTmplate" resultType="java.util.Map">
        select
            id, name, cuser, ctime
        from dms_excel_group
        ORDER BY ctime desc
    </select>

    <select id="checkExcelGroup" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM dms_excel_group
        WHERE  1=1
        <if test="'' != id and null != id">
            and id != #{id}  and name = #{name}
        </if>
        <if test="'' == id or null == id">
            and name = #{name}
        </if>
    </select>

    <insert id="insertExcelGroup" parameterType="com.dels.model.sys.ExcelTmplate">
        INSERT INTO dms_excel_group(id, name, cuser, ctime)
        values(#{groupId}, #{groupName}, #{cuser}, current_timestamp(0))
    </insert>

    <update id="updateExcelGroup" parameterType="com.dels.model.sys.ExcelTmplate">
        UPDATE dms_excel_group SET name = #{groupName}
        WHERE id = #{groupId}
    </update>

    <delete id="deleteExcelGroup">
        DELETE FROM dms_excel_group WHERE id = #{id}
    </delete>

    <select id="countPhoneNum" resultType="java.lang.Integer">
        select count(1) from dms_user
        where phone_number=#{phone}
        <if test="null != userid and '' != userid">
            and id != #{userid}
        </if>
    </select>


</mapper>