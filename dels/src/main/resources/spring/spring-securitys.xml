<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- 此目录下不需要过滤 -->
    <http security="none" pattern="/home/login" />
    <http security="none" pattern="/home/verificationImg" />
    <http security="none" pattern="/home/oneTimePasswd" />
    <http security="none" pattern="/assets/**" />
    <http security="none" pattern="/api/**" />

    <http auto-config="false" entry-point-ref="myEntryPoint">
        <!-- 非匿名用户就允许访问 -->
        <intercept-url pattern="/**" access="ROLE_ADMIN" />

<!--
        <form-login login-page="/login.jsp" authentication-failure-url="/login.jsp?error=true"  always-use-default-target="true" default-target-url="/index.jsp" />
-->
        <logout invalidate-session="true" success-handler-ref="logoutSuccessHandler"  delete-cookies="JSESSIONID"/>

        <custom-filter ref="userNamePasswdVerificationFilter" position="FORM_LOGIN_FILTER"/>

        <session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="/home/login"/>
        </session-management>
    </http>

    <!-- 用户验证、密码的加密验证 -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="customUserDetailsService">
            <password-encoder ref="passwordEncoder" />
        </authentication-provider>
    </authentication-manager>


    <beans:bean id="userNamePasswdVerificationFilter" class="com.dels.security.VerificationAuthenticationFilter">
        <beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>
        <beans:property name="usernameParameter" value="uname"></beans:property>
        <beans:property name="passwordParameter" value="passwd"></beans:property>
        <beans:property name="phoneParameter" value="phonenum"></beans:property>
        <beans:property name="oneTimePdParameter" value="onetimepd"></beans:property>
        <beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"></beans:property>
        <beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler"></beans:property>
        <beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
        <beans:property name="userService" ref="userService"></beans:property>
    </beans:bean>


    <!-- 通过自定义customUserDetailsService确定访问权限 -->
    <beans:bean class="com.dels.security.UserAuth" id="customUserDetailsService" />

    <!-- 对密码进行自定义校验 -->
    <beans:bean class="com.dels.security.UPEncode" id="passwordEncoder" />

    <!-- 自定义登录失败处理类-->
    <beans:bean class="com.dels.security.LoginFailureHandler" id="authenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/home/login" />
    </beans:bean>
    <!-- 自定义登录成功处理类  l13595 2017/1/13 16:00-->
    <beans:bean class="com.dels.security.LoginSuccessHandler" id="authenticationSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/#/indicators/welcome" />
    </beans:bean>
    <!-- 自定义的EntryPoint用于自定义权限异常的处理 -->
    <beans:bean id="myEntryPoint" class="com.dels.security.DmsAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/home/login"/>
    </beans:bean>

    <beans:bean class="com.dels.security.LogoutSuccessHandler" id="logoutSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/home/login" />
    </beans:bean>


</beans:beans>